(할일을 완료하면 -를 V로 바꾼다)

[
V 시스템의 보드 생성과 그리드 생성 및 아이템을 구현
V 시스템의 데이터 관리(입력, 출력)를 구현
V 시스템의 보드 전체 출력 구현
]

[
V 시스템 입출력 버그 수정 - 인덱스에서 상대좌표와 절대좌표에 따라 대응
V 시스템을 오델로(리버스), 체스, 지뢰찾기 등에 사용할 수 있도록 선형 그리기 및 아이템의 데이터 이동, 복사 등을 구현

V 아이템의 선형 그리기 메소드에서 보드의 영역 밖을 벗어나 그려지는 버그를 발견 : 호출 때 인덱스 유효 검사를 도입
V 시작인덱스를 지정하지 않으면, 자동으로 0으로 시작한다.
]

[
V 인덱스 유효 검사 도입
V 시작 좌표가 (0,0) 또는 (1,1)에 따른 시스템의 작동방식을 달리할 수 있도록 수정
V 선형 그리기를 가로, 세로, 대각선으로 그리듯 데이터 복사 저장할 수 있는 메서드를 개발
V 보드에 저장된 데이터를 브라우저의 콘솔에 테이블로 출력가능

V 기본값을 설정할 수 있으며 전체값을 지정할 수 있는 메서드를 개발
V 기본값은 나중에 보드가 확장될 때 빈 값을 채워넣을 것이다.

V 보드를 새로 갱신(덮어쓰기)할 때, 보드가 올바른 값인지 검사.
]

[
V SlashMap 세팅 메서드 추가
V 선형그리기 메서드(draw) 내에 범위 밖으로 벗어나면 에러를 출력하도록 정정
V 보드의 크기가 변동될 때, 그리드를 크기에 따라 확장 또는 축소하는 메서드를 추가 (+ 추가라고만 했음)
V 사각형을 그리는 메서드 추가

V 보드의 크기가 변동될 때 그리드가 확장된다면? : 확장된 아이템에 초기(기본) 값을 넣어야 한다.
V 그리드가 축소될 때, 축소된 그리드의 밖에 있는 아이템의 데이터를 어떻게 처리할 것인가? : 처리방식에 대한 예외를 만들어 사용자가 예외에 대한 방식을 선택하도록 한다.
]

[
V setSlashMap() 메서드 실행도중 발생하는 버그에 대한 패치를 개발
V setSlashMap()의 타입에 따라 진행방향이 달라지도록 함
V 보드의 크기가 변경되면 실제로 변경되도록 하는 메서드를 추가
- 선형탐색 메서드 추가 - 탐색(일치 또는 그 이상의 수)과 형식(해당하지 않는 것이나 해당하는 것을 반환하는 타입)에 따라 만든다.
V 사용가이드 제작 - index.html에 추가

V 보드의 크기가 변동될 때 그리드가 확장된다면? : 확장된 아이템에 초기(기본) 값을 넣어야 한다. (아직 절반은 완성X.)
V 그리드가 축소될 때, 축소된 그리드의 밖에 있는 아이템의 데이터를 어떻게 처리할 것인가? : 처리방식에 대한 예외를 만들어 사용자가 예외에 대한 방식을 선택하도록 한다. (이것도 마찬가지)
]

[
- 보드의 진행사항을 기록하는 기능 추가
- 보드 진행 상태를 기록하고, 되돌리는(Ctrl+Z) 기능과 다시실행(Ctrl+Y) 기능을 추가
V 시작 인덱스에 따라 달라지는 인덱스 오류(시작 인덱스가 0에서 1로 변경되면, 그에 따라 인덱스 번호가 변경되어야함)를 해결하는 패치를 추가

- 보드의 크기가 변동시, 축소되면 그리드의 밖의 아이템 데이터 처리 및 예외처리, 확대되면 빈 값을 초기값으로 채울 것.
- 기록방식으로 Stack을 시용하는데, 여러 단계를 한꺼번에 실행하는 메서드를 실행할 경우와 되돌리기 실행 시 스택을 어떻게 하면 다시실행이 실행될까? - Stack이 아닌 LinkedList로 교체 검토
]

[
- 보드 크기 변동 시 데이터 처리하는 메서드 추가
- 보드 크기 변동 시 발생하는 예외처리(데이터 처리)를 추가
- 기록 스택에서 되돌리기/다시실행 기능에 발생하는 오류 해결
- 기록 스택에서 되돌리기/다시실행 기능에서 보드가 바뀌는 것으로 수정

- 기록방식으로 Stack을 시용하는데, 여러 단계를 한꺼번에 실행하는 메서드(ex. 복사 메서드를 반복하여 한 개의 선을 그리는 메서드)를 실행할 경우, 스택을 어떤 구조로(ex. 복사 메서드 실행할 때, 스택에 한번 저장되는데, 그리기를 실행할 경우 스택에 여러 번 저장되는 이상한 구조를 어떤 방식으로) 바꾸어 해결할 것인가? - Stack을 LinkedList(연결리스트)로 대체가능하다.
]

[
- 변동된 아이템의 데이터를 기록 스택에 저장하기 위해 copy(), move(), setItem() 등 주요 메서드를 수정
- 아이템 저장이나 호출에 있어서 절대/상대좌표에 따라 저장방식을 분리
- 상대좌표를 절대좌표로 변환하는 함수 추가

- 기록방식으로 Stack을 사용하는 것을 기록스택이라 한다. 그런데 기록스택에 있어서 아이템이 변경되면 기록에 저장되는데, 이를 반복하는 그리기 메서드의 경우, 하나의 기록으로 보아야 한다. 그러나 기록에서는 여러 개의 작업으로 보는 버그가 있다.
- 해결방안: 그리기 메서드 실행 전, 기록스택에 패스데이터를 저장하여 패스데이터만큼 하나로 보게 만든다.
]

[
- 기록스택에 있어서 여러 개의 작업을 하나로 통일하기 위해 패스데이터라는 개념을 추가
- 패스데이터에 따라 여러 개의 작업을 하나의 작업으로 작동하도록 수정
- 전체의 모든 작업을 모두 디버깅 및 오류 수정

V 디버깅 도중 심각한 오류를 발견함. 오류의 내용은 setSlashMap()의 실행에 있어서 정사각형이 아닌 이상 직사각형은 실행되지 않음.
V 해결방안: 정사각형이 아니면 사용을 못하게 하거나, 직사각형에도 작동되도록 고친다. 나라면, 후자를 선택하겠다.
]

[
V setSlashMap() 오류 해결
- 패스데이터의 값에 따라 각자 작동하는 다양한 메서드를 개발(draw, rect, allSetInit)
- MVC 방식으로 개발 영역을 분할 및 View를 위한 파이프 시스템을 개발
- 정상테스트를 위해 체스게임 샘플을 개발

- 데이터를 변경하는 시점에서 어느 위치에 스택을 추가해야하는가? 아니면 사용자가 직접 저장을 실행하도록 할 것인가?
- 해결방법: 변경할 때 값이 바뀌도록 하는 함수에 스택을 추가한다. 또한 사용자가 원할 시, 사용자를 위한 기록함수를 개발한다.
V 놀랍게도 데이터 변경 1989번째에서 스택과 엔진의 작동이 중지됨.
V 해결방법: 무의미하지만, 중지될 때를 대비하도록 사용자에게 서버사용을 권장하고 수시로 데이터를 저장할 것을 권고
]

[
- 체스게임 샘플을 통해 말을 이동, 복사, 삭제를 통해 오류 여부를 확인하고 디버깅함
- 선형탐색을 이용해 체크메이트 여부를 확인
- 체스 뿐만 아니라 오목이나 바둑에서 사용하는 메서드를 개발

- 데이터를 변경하는 시점에서 어느 위치에 스택을 추가해야하는가? 아니면 사용자가 직접 저장을 실행하도록 할 것인가?
- 해결방법: 변경할 때 값이 바뀌도록 하는 함수에 스택을 추가한다. 또한 사용자가 원할 시, 사용자를 위한 기록함수를 개발한다.
- 바둑에서 집을 지었는지 여부를 보아야 한다. 이 알고리즘이 어떻게 구성될까?
- 해결방법: 바둑을 배워서 알고리즘을 구상한다.
]

[
V 대각선 그리기 테스트 중 대각선이 유효함에도 무효로 반환되는 버그를 발견함.
V 대각선 오류에 대해 디버깅 할 것이며, 오류를 고치고 나서 대각선이 제대로 그려지는지 확인.

V View를 위한 파이프 시스템에서 보드의 현재 상태를 조회할 수 있도록 메서드를 추가
V 파이프 시스템을 통해 보드를 관리할 수 있도록 메서드 추가
- 기록스택에서 기록이 저장될 때 사용되는 기록코드의 데이터 구조 형태를 설계하고 개발


- 기록스택에서 패스데이터를 추가함으로 그리기 함수의 기록 문제를 해결하였지만, 보드의 확장 또는 축소될 때 발생하는 데이터의 변동과 기록에 대한 문제가 남아 있다.
- 해결방법: 확장될 때, 추가되는 초기 값은 추가하지 않는다.
- 축소될 때 발생하는 데이터 삭제와 기록 문제: 삭제되기 전, 아웃사이드에 배치된 데이터를 기록하고 보드 축소실행이 된다. 반대로 기록을 되돌릴 때, 데이터 기록으로 복구한다. 또, 축소 때 옵션을 추가하여 기록하거나 기록하지 않도록 한다.
]


[
V GitHub에 사용가이드를 추가함.

- 기록에서 패스데이터 처리하는 메서드를 개발
- draw()와 같은 함수는 복사를 반복하는데, 복사함수는 한 건당 한번 기록된다. draw 실행 시 기록이 반복되지 않음)
- 확장 또는 축소 시 처리되는 데이터 기록처리 패치를 추가

- 기록스택에서 보드의 확장 또는 축소될 때 발생하는 데이터의 변동과 기록에 대해 문제를 해결하였으나, 축소될 때 발생하는 데이터 삭제와 기록 문제가 남아있다.
- 축소될 때, 바깥으로 밀려난 데이터의 처리방식을 옵션에 걸어둔다. 사용자가 얼마든지 옵션을 설정할 수 있으며, 옵션에 따라 데이터가 삭제되거나 기록에 남겨져 따로 백그라운드에 저장된다.
- 또는 옵션에 따라 데이터를 밀어서 안쪽으로 들어오게 만들 것이다.
]


[
- 보드 축소 시 발생하는 데이터 삭제와 기록문제에 대해서 옵션을 만들어 파라미터로 받아 이동보존 또는 삭제를 처리하도록 설정할 수 있음.
- 옵션에 따라 아웃사이드 데이터를 기록에 남길지 설정할 수 있게 백그라운드를 만들었음.

- 어떠한 유형의 데이터를 저장할 수 있는 자바스크립트를 사용하여 개발하고 있다. 그러나 탐색에서 아이템 데이터가 배열 또는 json과 같은 객체의 경우, 탐색 함수를 직접 사용자가 개발해야 하는 문제가 발생했다. 이에 따라 사용자가 원하는 객체의 속성을 찾을 수 있도록 함수를 파라미터로 받아 탐색할 수 있는 함수를 개발하기로 판단했다.
- 함수형 자바스크립트 프로그래밍이 있던데, 이것을 참조할 것이다.
]

[
- 프레임 조정단계에서 프레임 변동 없이도 작동되는 버그를 발견하고 이를 해결하는 패치를 개발
- 공간변동에 따른 데이터 처리 메서드를 모두 개발
- 사용자가 익명함수를 통해 직접 탐색방식을 정의하여 탐색할 수 있는 탐색 함수를 개발

- 아이템에 자유롭게 저장할 수 있으나, 데이터 형태가 배열 또는 json과 같은 객체라면, 사용자가 이를 탐색하는 함수를 직접 만들어야 하는 문제가 발생했다. 이에 따라 사용자가 정의하는 탐색조건을 파라미터 안의 익명 함수로 정의한 값을 탐색할 수 있도록 탐색함수를 새로 개발하게 되었다.
- 함수형 자바스크립트 프로그래밍이 있던데, 이것을 참조할 것이다. 이걸로 이 프로젝트를 조립하듯이 사용할 수 있게 만들 것이다.
]

[
- 사용자가 정의하여 탐색할 수 있는 탐색함수에서 오브젝트, 배열도 탐색 가능하도록 추가하고, 함수형 개발 방식을 도입
- 프레임 조정함수를 효율적으로 처리할 수 있도록 수정함
- 프레임 사이즈 축소함수 안에 있는 함수를 효율적으로 수정 (재귀함수->while)

- 사용자가 정의하고 탐색하는 함수에서 오브젝트와 배열로 된 데이터가 저장된 아이템을 탐색하는 방식의 구조가 다르다.
- 해결방안으로 해당 아이템 값을 구한다. -> 아이템 데이터를 사용자가 정의한 익명함수에 부합하는지 확인한다. -> 사용자가 정의한 반환에 따라 배열로 저장되거나 오브젝트로 저장된다. -> 이를 보드 내 아이템 개수만큼 반복한다. -> 완료되면 반환된다.

- 사용자가 탐색방법을 직접 정의할 수 있는 탐색함수에서 아이템 안에 저장되어 있는 데이터 방식에 상관없이 탐색할 수 있는 함수를 개발했다. 아이템을 item이라 정했을 때 아이템 안에 있는 오브젝트의 키 x는 item.x로 사용하고, 아이템 안의 배열 2번째는 item[2]로 정의할 수 있다. 이 방식을 따르면 보드 내 아이템을 전부 탐색해야 한다.
]

[
- 사용자가 정의하고 탐색하는 함수에서 오브젝트, 배열 탐색방식의 구조를 효율적으로 배치
- 기록 스택에 저장된 기록을 모두 불러내는 메서드를 개발
- 기록을 모두 불러올 때 배열 안 오브젝트 형태로 좌표와 데이터를 반환

- 기록스택에서 모든 기록을 불러올 때, 스택의 구조상 처음부터 불러오는 것이 불가능하다.
- 해결방안: 기록스택의 크기만큼의 배열을 선언하고, 맨 뒤에서부터 차례대로 불러내어 저장한다.
- 함수명을 봐도 어떤 기능을 할지 추측이 불가능한 함수가 있음
- 해결방안: 함수명을 기능과 명명규칙에 따라 개명한다.
]

[
- 파이프 시스템 개발 (직접 보드 내 데이터에 접근하지 않고 대신 처리하는 함수를 호출하여 관리하는 시스템)
- 기록스택 디버깅 및 개발 완료 (되돌리기, 다시실행, 모든 기록 전체 불러오기 등)

- 기록스택에서 모든 기록을 불러올 때, 스택의 구조상 처음부터 호출이 불가능하다.
- 해결방안: 새로 기록스택의 크기만큼의 배열을 만들고 맨 뒤에서부터 순서대로 저장하면, 전체 기록을 불러낼 수 있다.
- 디버깅 중 알 수 없는 에러가 발생함
- 해결: 괄호 하나 빠짐

- 기록스택 구조 상 데이터 변동이 발생하면, undo스택에 저장되고, 다시 실행 시 undo스택을 pop하여 redo스택에 저장된다. 데이터를 새로 저장하게 되면 redo스택의 데이터를 모두 잃게 된다.
]

- 보드와 그리드, 아이템의 모든 데이터를 추출하는 함수를 추가. (만일의 사태를 대비하기 위함)
- 추출된 데이터를 불러내는 함수를 추가. 가져오기에 성공해야 한다.
- 시스템 안에 있는 모든 보드 데이터를 내보내고 가져올 수 있도록 하기 전에 데이터 형식에 대한 정의한다.

- 체스 게임 개발
	- ???

- 미로 게임 개발
	- 아이템 값에 따른 미로벽 시스템을 개발
	- 랜덤으로 출발점과 도착점, 그리고 도착점까지 임의로 경로를 그리는 함수 개발
	- 경로를 지정하고 나면, 나머지 구역을 사각형으로 나눈다. (아마 탐욕 알고리즘이 도입이 될 듯)
	- 나눈 구역 구획별로 랜덤하게 길을 조성한다. 그리고 벽을 형성한다.
	- 그 다음, 미로 맵이 완성된다. 게임 플레이를 할 수 있는 환경을 만들어준다. (마우스 또는 편의상 키보드도 감지)


- (이게 본 목적인) 도시게임 개발 (아래는 순서대로 구현)
	- 도시의 타일 안에 이미지가 정상적으로 구현되는지 확인 (기울어져 있는 타일 위에 이미지를 정상적으로 구현하면 성공)
	- z-index 전용 보드를 구현 (GBE의 slashMap을 만드는 함수를 사용)
	- 마우스 커서를 타일위에 올리면 반응하도록 구현
	- 타일 데이터를 저장하는 새로운 보드를 생성 (보드는 여기서 2개를 사용한다)
	- 특정 값을 가진 채(도시게임에서 건물이나 도로 등을 클릭하고 나서) 타일을 클릭하면 해당 타일에 값을 추가
	- 해당 타일에 이미 값을 가졌다면, 건설 불가를 나타내는 반응을 구현 (도시게임에서 빨간 보더가 나타남)
	- 건설 완료되면, 연두색 테두리가 나타나도록 구현
	- 해당 타일에 업그레이드가 시행되면, 타일 값을 수정할 수 있도록 한다
	- 한 셀이 아닌 여러 셀(도시게임에서 빌딩이나 아파트, 공원 등)을 가질 때 저장 처리를 구현(사각 그리기 함수 또는 합병 구현)
	- 여러 셀(빌딩 등)을 배치할 때, 일부 부분에 이미 값이 있다면, 배치 못하도록 구현
	- 해당 타일 위에 (여러 셀을 가진 것도 포함) 빌딩이나 공원, 도로 이미지를 구현
	- 셀 크기와 이미지 아래 기반 부분이 일치해야 하고, 정렬을 잘 해야 함
	- 해당 타일에 도로가 있다면, 도로를 탐색하는 함수를 구현한다.
	- 도로 탐색이 완료되면 연결되는 방향에 따라 도로 이미지를 구현하고, 연결상황에 따라 도로 이미지가 구현되어야 한다.
	- 게임 하면서 이동이 필요로 하니, 이동을 구현하도록 한다.
	- 철거 함수를 구현
	- 철거 애니메이션 이미지를 타일 위에 작동될 수 있도록 구현한다.
	- 사이드 쪽에 메뉴와 이미지를 구현하여 아이콘이나 선택, 철거 등을 할 수 있도록 한다.
	- 아래는 아마 발표 이후에 나올 것으로 예상되며, 새로운 버전을 기획한다.
	- 영토 확장에 대비하여 초기값에는 타일이 구현 안되도록 한다.
	- 확장을 원하는 대로 나아갈 수 있도록 하며, 확장으로 인해 시작점이 바뀌면, 교체할 수 있도록 한다.
	- 이때까지 한 게임을 저장할 수 있도록 export를 구현한다.
	- 저장된 맵을 불러올 수 있도록 import를 구현한다. (물론 input file을 통해 불러올 것이다)
	- 
